[PARSER]
    Name         couchbase_prometheus
    Format       logfmt
    Time_Key     ts
    Time_Format  %Y-%m-%dT%H:%M:%S.%L
    Time_Keep    On

[PARSER]
    Name         couchbase_json_log_nanoseconds
    Format       json
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%L
    Time_Keep    On
    # Do not remove the time field from the output we ship

[PARSER]
    Name         couchbase_rebalance_report
    Format       json
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%H:%M:%SZ
    Time_Keep    On

# The level may have optional brackets around it
[PARSER]
    Name         couchbase_simple_log
    Format       regex
    Regex        ^(?<timestamp>\d+-\d+-\d+T\d+:\d+:\d+\.\d+(\+|-)\d+:\d+)\s+\[(?<level>\w+)\]\s*(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep    On

# Same as previous, just the level is not surrounded by brackets
# https://regex101.com/r/D5lYJY/1
[PARSER]
    Name         couchbase_simple_log_space_separated
    Format       regex
    Regex        ^(?<timestamp>\d+-\d+-\d+T\d+:\d+:\d+\.\d+(\+|-)\d+:\d+)\s+(?<level>\w+)\s+(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep    On

# Slight change in time format to use Z at end instead of offset:
# 2021-03-09T17:32:02.136Z INFO ...
# https://rubular.com/r/EpG3M1dHb5AnTC
[PARSER]
    Name         couchbase_simple_log_utc
    Format       regex
    Regex        ^(?<timestamp>\d+-\d+-\d+T\d+:\d+:\d+\.\d+Z)\s+(?<level>\w+)\s*(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%LZ
    Time_Keep    On

# Cope with two different log formats, e.g.:
# 2021/03/09 17:32:15 cbauth: ...
# 2021-03-09T17:32:15.303+00:00 [INFO] ...
# https://rubular.com/r/XUt7xQqEJnrF2M
[PARSER]
    Name         couchbase_simple_log_mixed
    Format       regex
    Regex        ^(?<timestamp>\d+(-|/)\d+(-|/)\d+(T|\s+)\d+:\d+:\d+(\.\d+(\+|-)\d+:\d+|))\s+((\[)?(?<level>\w+)(\]|:))\s*(?<message>.*)$
    Time_Key     timestamp
    Time_Keep    On
# We cannot parse the time as different formats directly, it could be done downstream and/or left as current time

[PARSER]
    Name         couchbase_erlang_multiline
    Format       regex
    # For some reason this cannot parse an ending close bracket ] followed by a new line immediately
    #Regex        \[(?<logger>\w+):(?<level>\w+),(?<timestamp>\d+-\d+-\d+T\d+:\d+:\d+.\d+Z),.*\]\s*(?<message>.*)$
    Regex        \[(?<logger>\w+):(?<level>\w+),(?<timestamp>\d+-\d+-\d+T\d+:\d+:\d+.\d+Z),\s*(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%L
    Time_Keep    On

# 2021-03-09T17:32:25.339+00:00 INFO CBAS.bootstrap.AnalyticsNCApplication [main] ...
# https://rubular.com/r/9jh1oKtXBN5GEV
# Can include an exception stack trace or a thread dump as well but ignoring these for now
[PARSER]
    Name         couchbase_java_multiline
    Format       regex
    Regex        ^(?<timestamp>\d+-\d+-\d+T\d+:\d+:\d+\.\d+(\+|-)\d+:\d+)\s+(?<level>\w+)\s+(?<class>.*)\s+\[(?<thread>.*)\]\s+(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep    On

# A slight modification of the usual Apache/Apache2 parsers
[PARSER]
    Name         couchbase_http
    Format       regex
    Regex        ^(?<host>[^ ]*)\s+[^ ]*\s+(?<user>[^ ]*)\s+\[(?<timestamp>[^\]]*)\]\s+"?(?<method>\S+)\s+(?<path>[^ \?]+)\??(?<query_string>[^ \?]+)?\s+\S+"\s+(?<status>[^ ]*)\s+(?<size>[^ ]*)\s+(?<referer>(-|"[^"]+"))\s+"?(?<client>[^"]+)"?.*
    Time_Key     timestamp
    Time_Format %d/%b/%Y:%H:%M:%S %z
    Time_Keep    On
    Types status:integer size:integer

# To shorten our filenames
[PARSER]
    Name couchbase_filename_shortener
    Format regex
    # For memcached.log.<digits>.txt we also remove the rotated names, these can still be retrieved by filename key.
    # We need to make sure we pick up rebalance reports as well which end in .json, all other logs end in .log.
    # https://rubular.com/r/YX94tSKujjnJM1
    Regex ^(?<file_path>.*)/(?<file>.*\.(log|json))(?<file_suffix>\.[\d]+.*)?$

# Handle Slow Query Logs
# 2022-03-28T21:22:27.738Z [INFO]
[PARSER]
    Name         couchbase_slow_query_parser
    Format       regex
    Regex        ^(?<timestamp>\d+-\d+-\d+T\d+:\d+:\d+\.\d+Z)\s+\[(?<level>\w+)\]\s*(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%LZ

# convert message to json
[PARSER]
    Name        to_json
    Format      json

# Get Bucket Name from memcached.log
[PARSER]
    Name couchbase_bucket_memcached
    Format regex
    # For memcached.log some messages contain the bucket name at the start of the message
    # i.e. (name_of_bucket) message...
    # https://regexr.com/6t06k
    Regex ^\s*((\d+:\s)?\(|\d+:\s.+"bucket":")(?<bucket>[A-Za-z0-9-_]*|[^"]+)(\)|").+$

# Get Bucket Name from babysitter.log
[PARSER]
    Name couchbase_bucket_babysitter
    Format regex
    # For babysitter.log some messages contain the bucket name at the start of the message
    # i.e. babysitter_of_ns_1@cb.local:<0.114.0>:ns_port_server:log:224]memcached<0.114.0>: 2022-08-27T01:09:32.837454+00:00 WARNING (demo) Slow runtime for 'Pag
    Regex ^babysitter_of.+:\s+\d{4}-\d{2}-\d{2}[^ ]+\s+\w+\s+\((?<bucket>[A-Za-z0-9-_]*)\).+

# Get Bucket Name from goxdcr.log
[PARSER]
    Name couchbase_bucket_xdcr
    Format regex
    # For goxdcr.log find patterns to get the bucket name
    # i.e. 49b21c3086505cd12523e34294586d8a/demo/demo or GOXDCR.BucketTopologySvc: demo
    Regex ^\s*(GOXDCR\.(BucketTopologySvc|StatsMgr)\w+:\s*|.+[a-z0-9]{32}\/)(?<bucket>[A-Za-z0-9-_]+).+

# Get Bucket Name from http_*.log
[PARSER]
    Name couchbase_bucket_http
    Format regex
    # For http_*.log find patterns to get the bucket name
    # i.e. /pools/default/buckets/baseball
    Regex ^\/pools\/default\/b(uckets)?\/(?<bucket>[^\/\?]+).*$

# Get Bucket Name from ns_couchdb.log
[PARSER]
    Name couchbase_bucket_ns_couchdb
    Format regex
    # For ns_couchdb.log find patterns to get the bucket name
    # i.e. couchdb_ns_1@cb.local:<0.28481.3043>:ns_couchdb_api:handle_rpc:255]Cleaning up indexes for bucket `demo`
    Regex ^.+bucket\s+`?(?<bucket>[^` ]+)`?.*$

# Get Bucket Name from projector.log
[PARSER]
    Name couchbase_bucket_projector
    Format regex
    # For projector.log find patterns to get the bucket name
    # i.e. WRKR[<-baseball<-127.0.0.1:8091 #MAINT_STREAM_TOPIC_058c1a530f92b82b8b44e67c8de3fe2a] ##d
    Regex ^[A-Z]+\[\<-(?<bucket>[^ \<]+).+

# Get XDCR Logging Component from goxdcr.log
[PARSER]
    Name couchbase_xdcr_component
    Format regex
    # i.e. GOXDCR.BucketTopologySvc:
    Regex ^\s*(?<component>GOXDCR\.[A-Za-z0-9-_]+)(:|\s*).+

# Get Indexer Logging Component from indexer.log
[PARSER]
    Name couchbase_indexer_component
    Format regex
    # i.e. lifecycleMgr.dispatchRequest, messageListener.start(), DDLServiceMgr::cleanupTokens, janitor:
    Regex ^\s*(?<component>([A-Za-z0-9]+(::|\.))?[A-Za-z0-9]+(\s+(new\s+stats|metadata))?)(\s*\(\)|:|\s+).+

# Get Client Info for HELOs Logging Component from memcached.log
[PARSER]
    Name couchbase_memcached_helo
    Format regex
    # i.e. 413: HELO [{\"a\":\"libcouchbase/3.2.5-njs, 430: HELO [cbmultimanager/v0.3.0] [ {
    Regex ^(\d+:\s+)?HELO\s+(\[\{"a":"|\[)(gocbcore\/[^ ]+\s+?)?(?<client_sdk>[^"\(\]]+)[^\{]+\{"ip":"(?<client_ip>[^"\\]+)([^\n\<]+\<ud\>|.+\s+\()(?<user>[^\<\)]+).+$

# Get Analytics Logging Component from analytics.log
[PARSER]
    Name couchbase_analytics_component
    Format regex
    # i.e. CBAS.work.JobCleanupWork [Worker:ClusterController]
    Regex ^\s*(?<component>CBAS\.[A-Za-z0-9-_\.]+)\s+.+

# Get Eventing Logging Component from eventing.log
[PARSER]
    Name couchbase_eventing_component
    Format regex
    # i.e. SuperSupervisor::NotifyPrepareTopologyChange
    Regex ^\s*(?<component>([A-Za-z0-9]+::)?[A-Za-z0-9]+):?\s+.+

# Get Projector Logging Component from projector.log
[PARSER]
    Name couchbase_projector_component
    Format regex
    # i.e. WRKR[<-demo<-127.0.0.1:8091 #MAINT_STREAM_TOPIC_3a61a68eeca8a0cbb2b2dbf5, Projector stats:
    Regex ^\s*(?<component>[A-Za-z0-9 ]+|[A-Za-z0-9]+|)(\[|:|\s+).+
