---
- name: Fail when fluent_bit variables are not defined
  fail:
    msg: "The {{ item }} property must be set"
  when: ( item is not defined )
  with_items:
    - fluent_bit_version
    - fluent_bit_storage_buffer_path
    - fluent_bit_http_listen
    - fluent_bit_http_port
    - fluent_bit_conf_dir
    - fluent_bit_conf_file
    - fluent_bit_env_file
    - fluent_bit_user
    - fluent_bit_user_group
    - fluent_bit_log_level
    - fluent_bit_stdout_match
    - fluent_bit_loki_match
    - fluent_bit_loki_host
    - fluent_bit_loki_port
    - fluent_bit_mbl_couchbase_audit
    - fluent_bit_mbl_couchbase_erlang
    - fluent_bit_mbl_couchbase_eventing
    - fluent_bit_mbl_couchbase_http
    - fluent_bit_mbl_couchbase_index_projector
    - fluent_bit_mbl_couchbase_java
    - fluent_bit_mbl_couchbase_memcached
    - fluent_bit_mbl_couchbase_prometheus
    - fluent_bit_mbl_couchbase_rebalance
    - fluent_bit_mbl_couchbase_xdcr

- name: Fail when couchbase variables are not defined
  fail:
    msg: "The {{ item }} property must be set"
  when: ( item is not defined )
  with_items:
    - couchbase_username
    - couchbase_password
    - couchbase_install_dir
    - couchbase_cluster_name
    - couchbase_server_version
    - couchbase_logs_dir
    - couchbase_logs_rebalance_tmp_dir
    - couchbase_user_group

- name: Fail when variables do not have a length
  fail:
    msg: "The {{ item }} property must be valued"
  when: ( item | string | length == 0 )
  with_items:
    - fluent_bit_storage_buffer_path
    - fluent_bit_http_listen
    - fluent_bit_http_port
    - fluent_bit_conf_dir
    - fluent_bit_conf_file
    - fluent_bit_env_file
    - fluent_bit_user
    - fluent_bit_user_group
    - fluent_bit_log_level
    - couchbase_username
    - couchbase_password
    - couchbase_install_dir
    - couchbase_logs_dir
    - couchbase_logs_rebalance_tmp_dir
    - couchbase_user_group
    - couchbase_fluent_bit_source

- name: Fail when fluent_bit_http_port is not a number
  fail:
    msg: "The fluent_bit_http_port property must be an integer"
  when: ( fluent_bit_http_port is defined and fluent_bit_http_port is not number )

- name: Fail when the log level contains an invalid value
  fail:
    msg: "The fluent_bit_log_level can only be: debug, info, warn, error"
  when: ( fluent_bit_log_level not in ['off', 'debug','info','warn','error'] )

- name: Assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This role only works with systemd"

- name: Get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version
  tags:
    - skip_ansible_lint

- name: Set systemd version fact
  set_fact:
    fluent_bit_systemd_version: "{{ __systemd_version.stdout_lines[0] | regex_replace('^systemd\\s(\\d+).*$', '\\1') }}"

- name: Check if fluent_bit is installed
  stat:
    path: "{{ _fluent_bit_binary_install_dir }}/fluent-bit"
  register: __fluent_bit_is_installed
  check_mode: false
  tags:
    - fluent_bit_install

- name: Install Checks
  block:
    - name: Gather currently installed fluent-bit version
      ansible.builtin.shell:
        cmd: |
          "{{ _fluent_bit_binary_install_dir }}/fluent-bit --version | cut -d 'v' -f 2 | sed -Ez 's/\n+.+$//'"
      register: __fluent_bit_current_version_output

    - name: Set fluent-bit Installed Version
      ansible.builtin.set_fact:
        fluent_bit_installed_version: "{{ __fluent_bit_current_version_output.stdout | regex_replace('\\n.+$', '\\1') }}"

    - name: fluent-bit Installed Version
      ansible.builtin.debug:
        var: fluent_bit_installed_version

  when: __fluent_bit_is_installed.stat.exists

- name: Get Fluent Bit Version from Github
  block:
    - name: Get the latest published Fluent Bit
      # this will need to be changed from /releases to /releases/latest once a GA release has been made
      shell: | # noqa command-instead-of-module
        curl -s https://api.github.com/repos/{{ _fluent_bit_github_org }}/{{ _fluent_bit_github_repo }}/releases \
          | grep -m 1 tag_name \
          | cut -d '"' -f 4 | cut -c 2-
      register: _fluent_bit_version_request

    - name: Set the CMOS Exporter Version
      set_fact:
        fluent_bit_version: "{{ _fluent_bit_version_request.stdout | string }}"
  when: fluent_bit_version == 'latest'

- name: Get Cluster Info
  block:
    - name: Get the Couchbase Cluster Info
      no_log: true
      uri:
        url: http://127.0.0.1:8091/pools/default
        method: GET
        user: "{{ couchbase_username }}"
        password: "{{ couchbase_password }}"
        timeout: 5
        status_code:
          - 200
      register: _results
      until: _results.status == 200
      retries: 15
      delay: 5
      tags:
        - fluent_bit_configure

    - name: Set the Couchbase Cluster Name from the result of API call
      set_fact:
        couchbase_cluster_name: "{{ _results.json.clusterName }}"
      when: not couchbase_cluster_name
      tags:
        - fluent_bit_configure

    - name: Couchbase Cluster Name
      debug:
        msg: "{{ couchbase_cluster_name }}"
      tags:
        - fluent_bit_configure

    - name: Set the Couchbase Node from the result of API call
      set_fact:
        couchbase_node: "{{ _results.json | community.general.json_query('nodes[?thisNode].hostname | [0]') | regex_replace(':[0-9]+$', '') }}"
      tags:
        - fluent_bit_configure

    - name: Couchbase Node Name
      debug:
        msg: "{{ couchbase_node }}"
      tags:
        - fluent_bit_configure

    - name: Set the Couchbase Server Version from the result of API call
      set_fact:
        couchbase_server_version: "{{ _results.json | community.general.json_query('nodes[?thisNode].version | [0]') }}"
      when: not couchbase_server_version
      tags:
        - fluent_bit_configure

    - name: Couchbase Server Version
      debug:
        msg: "{{ couchbase_server_version }}"
      tags:
        - fluent_bit_configure

    - name: Set the Couchbase Services from the result of API call
      set_fact:
        couchbase_services: "{{ _results.json | community.general.json_query('nodes[?thisNode].services | [0]') | join(',') }}"
      tags:
        - fluent_bit_configure

    - name: Couchbase Services
      debug:
        msg: "{{ couchbase_services }}"
      tags:
        - fluent_bit_configure

- name: Set whether or not to do the install
  ansible.builtin.set_fact:
    __fluent_bit_do_install: "{{  not __fluent_bit_is_installed.stat.exists or fluent_bit_installed_version is version_compare(fluent_bit_version, '<') }}"

- name: Do Install
  ansible.builtin.debug:
    var: __fluent_bit_do_install
