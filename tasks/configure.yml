---
- name: Stop fluent-bit if installed
  block:
    # this will fail the verify first time of installation if local binary is used
    - name: Ensure fluent-bit is stopped
      ansible.builtin.systemd:
        name: fluent-bit
        enabled: true
        state: stopped
  rescue:
    # make sure that the service isn't actually installed
    - name: Get the list of services
      ansible.builtin.service_facts:

    - name: Verify that fluent-bit is not installed
      ansible.builtin.assert:
        that:
          - _fluent_bit_systemd_unit not in services

# only used when propagating a local binary
- name: Installed Version
  block:
    - name: Gather currently installed fluent-bit version
      ansible.builtin.command:
        cmd: |
          {{ _fluent_bit_binary_install_dir }}/fluent-bit --version | cut -d 'v' -f 2 | sed -Ez 's/\\n+.+$//'
      changed_when: false
      register: __fluent_bit_current_version_output
      check_mode: false

    - name: Set fluent-bit Installed Version
      ansible.builtin.set_fact:
        fluent_bit_version: "{{ __fluent_bit_current_version_output.stdout | regex_replace('\\n.+$', '') }}"

  when: __fluent_bit_local_install or fluent_bit_version == 'latest'

- name: Fluent Bit Version
  ansible.builtin.debug:
    msg: "{{ fluent_bit_version }}"

- name: Create a symbolic link
  ansible.builtin.file:
    src: "{{ _fluent_bit_binary_install_dir }}/fluent-bit"
    dest: "/usr/bin/fluent-bit"
    owner: root
    group: root
    state: link

- name: Setup Fluent Bit Service
  block:
    - name: Overwrite/Create Fluent Bit Service
      ansible.builtin.template:
        src: fluent-bit.service.j2
        dest: "{{ _fluent_bit_systemd_path }}/{{ _fluent_bit_systemd_unit }}"
        owner: root
        group: root
        mode: 0775

    - name: Create the Service Environment File
      ansible.builtin.template:
        src: EnvironmentFile.j2
        dest: "{{ fluent_bit_conf_dir }}/{{ fluent_bit_env_file }}"
        owner: "{{ fluent_bit_user }}"
        group: "{{ fluent_bit_user_group }}"
        mode: 0664

- name: Create Fluent Bit couchbase Directory
  ansible.builtin.file:
    path: "{{ fluent_bit_conf_dir }}/couchbase"
    state: directory
    owner: "{{ fluent_bit_user }}"
    group: "{{ fluent_bit_user_group }}"
    mode: 0775

- name: Copy main fluent-bit.conf file
  ansible.builtin.copy:
    src: "conf/fluent-bit.conf"
    dest: "{{ fluent_bit_conf_dir }}/{{ fluent_bit_conf_file }}"
    owner: "{{ fluent_bit_user }}"
    group: "{{ fluent_bit_user_group }}"
    mode: 0664

- name: Copy service, parsers, and streams conf files
  ansible.builtin.copy:
    src: "conf/couchbase/{{ item }}"
    dest: "{{ fluent_bit_conf_dir }}/couchbase/{{ item }}"
    owner: "{{ fluent_bit_user }}"
    group: "{{ fluent_bit_user_group }}"
    mode: 0664
  with_items:
    - parsers-couchbase.conf
    - streams-couchbase.conf
    - service.conf

- name: Create Fluent Bit couchbase/filter Directory
  ansible.builtin.file:
    path: "{{ fluent_bit_conf_dir }}/couchbase/filter"
    state: directory
    owner: "{{ fluent_bit_user }}"
    group: "{{ fluent_bit_user_group }}"
    mode: 0775

- name: Copy Filter conf files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ fluent_bit_conf_dir }}/couchbase/filter/{{ item | basename }}"
    owner: "{{ fluent_bit_user }}"
    group: "{{ fluent_bit_user_group }}"
    mode: 0664
  with_fileglob:
    - conf/couchbase/filter/*.conf

# Handle Scripts
- name: Create Fluent Bit couchbase/scripts Directory
  ansible.builtin.file:
    path: "{{ fluent_bit_conf_dir }}/couchbase/scripts"
    state: directory
    owner: "{{ fluent_bit_user }}"
    group: "{{ fluent_bit_user_group }}"
    mode: 0775

# Handle Input
- include_tasks:
    file: input.yml
    apply:
      become: true
      tags:
        - fluent_bit_configure

# Handle Output
- include_tasks:
    file: output.yml
    apply:
      become: true
      tags:
        - fluent_bit_configure

- name: "Replace all instances of /etc/fluent-bit with {{ fluent_bit_conf_dir }}"
  ansible.builtin.replace:
    path: "{{ item }}"
    regexp: "/etc/fluent-bit"
    replace: "{{ fluent_bit_conf_dir }}"
  when: fluent_bit_conf_dir != '/etc/fluent-bit'
  with_items:
    - "{{ fluent_bit_conf_dir }}/fluent-bit.conf"
    - "{{ fluent_bit_conf_dir }}/couchbase/service.conf"

# These files may exist from previous releases of the role, remove them if they do as they aren't used or
# have been moved.
- name: Cleanup old files from previous releases
  ansible.builtin.file:
    path: "{{ fluent_bit_conf_dir }}/{{ item }}"
    state: absent
  with_items:
    - parsers.conf
    - plugins.conf
    - couchbase/input/in-eventing-fts-log.conf
    - couchbase/input/in-erlang-multiline-log.conf
    - couchbase/input/in-index-projector-log.conf
    - couchbase/input/in-analytics-log.conf
    - couchbase/input/in-audit-log.conf
    - couchbase/input/in-babysitter-log.conf
    - couchbase/input/in-couchdb-log.conf
    - couchbase/input/in-debug-log.conf
    - couchbase/input/in-eventing-log.conf
    - couchbase/input/in-fts-log.conf
    - couchbase/input/in-http-log.conf
    - couchbase/input/in-indexer-log.conf
    - couchbase/input/in-json_rpc-log.conf
    - couchbase/input/in-mapreduce_errors-log.conf
    - couchbase/input/in-memcached-log.conf
    - couchbase/input/in-metakv-log.conf
    - couchbase/input/in-ns_couchdb-log.conf
    - couchbase/input/in-projector-log.conf
    - couchbase/input/in-prometheus-log.conf
    - couchbase/input/in-query-log.conf
    - couchbase/input/in-rebalance-report.conf
    - couchbase/input/in-reports-log.conf
    - couchbase/input/in-xdcr-log.conf
  ignore_errors: true    # noqa ignore-errors

# - name: Uncomment filter-common-problems
#   replace:
#     path: "{{ fluent_bit_conf_dir }}/{{ fluent_bit_conf_file}}"
#     regexp: "# @include {{ fluent_bit_conf_dir }}/couchbase/filter-common-problems.conf"
#     replace: "@include {{ fluent_bit_conf_dir }}/couchbase/filter-common-problems.conf"
#   tags:
#     - fluent_bit_configure
#     - fluent_bit_include_common_problems
