---
- name: Install Fluent Bit agent dependencies (postgresql-libs lua)
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - postgresql-libs
    - lua

- name: Fluent Bit Group Creation
  block:
    - name: Check if the "{{ fluent_bit_user_group }}" group exists
      ansible.builtin.getent:
        database: group
        key: "{{ fluent_bit_user_group }}"
        fail_key: false

    - name: Set whether not the user group exists
      ansible.builtin.set_fact:
        __fluent_bit_user_group_exists: "{{ ansible_facts.getent_group[fluent_bit_user_group] is not none }}"

    - name: Add user group "{{ fluent_bit_user_group }}"
      ansible.builtin.group:
        name: "{{ fluent_bit_user_group }}"
        system: true
        state: present
      when: not __fluent_bit_user_group_exists and fluent_bit_user_group != 'root'

    - name: Fluent Bit User Group Exists
      ansible.builtin.debug:
        msg: "The user group \"{{ fluent_bit_user_group }}\" already exists and will not be modified, if modifying permissions please perform a separate task"
      when: __fluent_bit_user_group_exists

- name: Fluent Bit User Creation
  block:
    - name: Check if the "{{ fluent_bit_user }}" user exists
      ansible.builtin.getent:
        database: passwd
        key: "{{ fluent_bit_user }}"
        fail_key: false

    - name: Set whether not the user exists
      ansible.builtin.set_fact:
        __fluent_bit_user_exists: "{{ ansible_facts.getent_passwd[fluent_bit_user] is not none }}"

    - name: Add user "{{ fluent_bit_user }}"
      ansible.builtin.user:
        name: "{{ fluent_bit_user }}"
        comment: "Fluent Bit Account"
        groups:
          - "{{ fluent_bit_user_group }}"
          - "{{ fluent_bit_couchbase_user_group }}"
        system: true
        shell: "{{ fluent_bit_user_shell }}"
        createhome: "{{ fluent_bit_user_createhome }}"
      when: not __fluent_bit_user_exists and fluent_bit_user != 'root'

    - name: Fluent Bit User Exists
      ansible.builtin.debug:
        msg: "The user \"{{ fluent_bit_user }}\" already exists and will not be modified, if modifying permissions please perform a separate task"
      when: __fluent_bit_user_exists

- name: Package Install
  block:
    - name: Include the OS specific repository
      ansible.builtin.include_tasks: "{{ item }}"
      with_first_found:
        - "repos/{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "repos/{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "repos/{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "repos/{{ ansible_distribution | lower }}.yml"
        - "repos/{{ ansible_os_family | lower }}.yml"

    - name: Install the latest version of Fluent Bit
      ansible.builtin.package:
        name: fluent-bit
        state: latest    # noqa package-latest

  when: not __fluent_bit_local_install and __fluent_bit_do_install

- name: Propagate local fluent-bit binary
  ansible.builtin.copy:
    src: "{{ fluent_bit_local_binary_path }}"
    dest: "{{ fluent_bit_local_binary_path }}/fluent-bit"
    mode: 0775
    owner: "{{ fluent_bit_user }}"
    group: "{{ fluent_bit_user_group }}"
  when: __fluent_bit_local_install

- name: Ensure fluent-bit permissions are correctly set
  become: true
  ansible.builtin.file:
    path: "{{ fluent_bit_conf_dir }}"
    state: directory
    owner: "{{ fluent_bit_user }}"
    group: "{{ fluent_bit_user_group }}"
    mode: 0775
  with_items:
    - "{{ fluent_bit_conf_dir }}"
    - "{{ _fluent_bit_binary_install_dir }}"

- name: Remove storage buffer directory
  ansible.builtin.file:
    path: "{{ fluent_bit_storage_buffer_path }}"
    state: absent
  ignore_errors: true    # noqa ignore-errors

- name: Ensure storage buffer directory exists
  ansible.builtin.file:
    path: "{{ fluent_bit_storage_buffer_path }}"
    state: directory
    owner: "{{ fluent_bit_user }}"
    group: "{{ fluent_bit_user_group }}"
    mode: 0665
